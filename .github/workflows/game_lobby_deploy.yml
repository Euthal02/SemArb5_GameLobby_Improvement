name: Deploy the GameLobby Image

on:
  push:
    # this means that the workflow will only trigger if there are changes in this directory
    paths:
      - 'gamelobby/**'
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: "gamelobby"
  cancel-in-progress: true

jobs:
  health-check:
    runs-on: ubuntu-latest
    environment: gamelobby
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build and run container
        run: |
          cd gamelobby
          docker build -t pong-game-lobby .
          docker run -d -p 80:80 --name pong-game-lobby-container pong-game-lobby

      - name: Wait for container to be ready
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:80/health | grep 'OK'; then
              echo "Container is healthy!";
              exit 0;
            else
              echo "Waiting for container to be healthy...";
              sleep 5;
            fi
          done
          echo "Container health check failed.";
          exit 1

      - name: Stop and remove container
        if: always()
        run: |
          docker stop pong-game-lobby-container
          docker rm pong-game-lobby-container
          docker image prune -af
  
  build-job:
    runs-on: ubuntu-latest
    environment: gamelobby
    needs: health-check
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout Repo
      uses: actions/checkout@main

    - name: Log in to GHCR
      uses: docker/login-action@master
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ${{ vars.REGISTRY }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@master
      with:
        images: ${{ vars.REGISTRY }}/${{ vars.IMAGE_NAME }}
        flavor: |
            latest=true
        tags: |
            type=sha,format=long

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@master
      with:
        file: ${{vars.SUBFOLDER}}/Dockerfile
        context: ${{vars.SUBFOLDER}}/.
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true

  deploy-job:
    runs-on: ubuntu-latest
    environment: gamelobby
    needs: build-job
    steps:
      - name: Checkout Repo
        uses: actions/checkout@main

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@main
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Create Kubeconfig file 
        run: |
            aws eks update-kubeconfig --name ${{ vars.EKS_CLUSTER_NAME }} --region ${{ vars.AWS_REGION }}
            echo 'KUBE_CONFIG_DATA<<EOF' >> $GITHUB_ENV
            echo $(cat ~/.kube/config | base64) >> $GITHUB_ENV
            echo 'EOF' >> $GITHUB_ENV

      - name: Kubectl and Helm Deploy
        id: command_exec
        uses: koslib/helm-eks-action@master
        env:
          KUBE_CONFIG_DATA: ${{ env.KUBE_CONFIG_DATA }}
        with:
          command: |
            helm upgrade pong-game-lobby ./gamelobby/helm/. -i --force

      - name: Print Response from Kubectl and Helm
        run: echo "${{ steps.command_exec.outputs.response }}"
